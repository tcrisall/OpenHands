---
apiVersion: v1
kind: Namespace
metadata:
  name: ai
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: openhands-var-lib-docker-pv
spec:
  capacity:
    storage: 200Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data1  # Mount point you created
    type: DirectoryOrCreate
  storageClassName: ""
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kube-4
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: openhands-config-pv
spec:
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.100.115
    path: /data2/docker/openhands/config
#  mountOptions:
#    - noatime          # Reduce metadata updates
#    - nodiratime       # Reduce directory access time updates
#    - hard            # Better reliability than soft mounts
#    - rsize=65536     # Read buffer size (max 65536)
#    - wsize=65536     # Write buffer size (max 65536)
#    - vers=4.1        # Force NFSv4.1 (often faster than v3)
#    - tcp             # Force TCP protocol
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: openhands-var-lib-docker-pvc
  namespace: ai
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  volumeName: openhands-var-lib-docker-pv
  storageClassName: ""
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: openhands-config-pvc
  namespace: ai
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
  volumeName: openhands-config-pv
  storageClassName: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openhands
  namespace: ai
  labels:
    app: openhands
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openhands
  template:
    metadata:
      labels:
        app: openhands
    spec:
      nodeSelector:
        nvidia.com/gpu: "true"
      tolerations:
        - key: "nvidia.com/gpu"
          operator: "Exists"
          effect: "NoSchedule"
      runtimeClassName: nvidia
      hostAliases:  # Adds entries to /etc/hosts
        - ip: "127.0.0.1"
          hostnames:
            - "host.docker.internal"
      containers:
        - name: openhands
          image: registry.home:5000/openhands-test:latest
          securityContext:
            privileged: true   # Required for DinD to run
          ports:
            - containerPort: 3000 
          env:
            - name: NODE_ENV
              value: "development"
            - name: SANDBOX_RUNTIME_CONTAINER_IMAGE
              value: docker.all-hands.dev/all-hands-ai/runtime:0.48-nikolaik
            - name: LLM_API_VERSION
              value: "2025-01-01-preview"
          volumeMounts:
            - name: openhands-var-lib-docker
              mountPath: /var/lib/docker
            - name: openhands-config
              mountPath: /.openhands
      volumes:
        - name: openhands-var-lib-docker
          persistentVolumeClaim:
            claimName: openhands-var-lib-docker-pvc
        - name: openhands-config
          persistentVolumeClaim:
            claimName: openhands-config-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: openhands-lbsvc
  namespace: ai
  annotations:
    metallb.universe.tf/loadBalancerIPs: "192.168.100.86"
    metallb.universe.tf/allow-shared-ip: "tv-stack"
spec:
  type: LoadBalancer
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  selector:
    app: openhands
  ports:
    - name: webapp
      port: 3200
      targetPort: 3000


